services:

  webserver:
    networks:
      - ndsnet

  scheduler:
    networks:
      - ndsnet
#  dev-branch only:
    command:
      - /bin/bash
      - -c
      - |
        airflow db upgrade
        echo "Creating MinIO connection..."
        airflow connections add 's3_conn' \
          --conn-type 'aws' \
          --conn-login 'minio' \
          --conn-password 'minio123' \
          --conn-extra '{"endpoint_url": "http://minio:9000"}'
        echo "Creating TFL API connection..."
        airflow connections add 'tfl_api' \
          --conn-type 'http' \
          --conn-host 'api.tfl.gov.uk' \
          --conn-schema 'https'
        echo "Setting dev bucket variable..."
        airflow variables set BUCKET_NAME tfl-data
        airflow scheduler
#

  triggerer:
    networks:
      - ndsnet

  postgres_dw:
    image: postgres:14
    environment:
      POSTGRES_USER: dw_user
      POSTGRES_PASSWORD: dw_password
      POSTGRES_DB: tfl_dw
    restart: always
    volumes:
      - ./include/data/postgres-dw:/postgres-dw-data
    ports:
      - "5433:5432"
    networks:
      - ndsnet

  metabase:
    image: metabase/metabase:v0.52.8.4
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - ./include/data/metabase:/metabase-data
    networks:
      - ndsnet

#  dev-branch only:
  minio:
    image: minio/minio:RELEASE.2024-06-13T22-53-53Z
    container_name: minio
    hostname: minio
    restart: always
    volumes:
      - ./include/data/minio:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    entrypoint: >
      /bin/sh -c "
      minio server /data --console-address ':9001' &
      MINIO_PID=$! &&
      sleep 5 &&
      mc alias set local http://localhost:9000 minio minio123 &&
      mc mb -p local/tfl-data || true &&
      wait $MINIO_PID
      "
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - ndsnet
#

networks:
  ndsnet:
    driver: bridge